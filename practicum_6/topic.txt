
docker volume rm $(docker volume ls -q | grep zookeeper)
docker volume rm $(docker volume ls -q | grep kafka)

# Команда для создания топика
# Создаём topic-1
docker exec -it kafka1 kafka-topics \
  --create \
  --topic topic-1 \
  --bootstrap-server kafka1:19092 \
  --replication-factor 2 \
  --partitions 3

# Создаём topic-2
docker exec -it kafka1 kafka-topics \
  --create \
  --topic topic-2 \
  --bootstrap-server kafka1:19092 \
  --replication-factor 2 \
  --partitions 3


# topic-1: WRITE
docker exec -it kafka1 kafka-acls \
  --add \
  --allow-principal User:CN=kafka-client \
  --operation WRITE \
  --operation DESCRIBE \
  --topic topic-1 \
  --bootstrap-server kafka1:19092

# topic-2: WRITE
docker exec -it kafka1 kafka-acls \
  --add \
  --allow-principal User:CN=kafka-client \
  --operation WRITE \
  --operation DESCRIBE \
  --topic topic-2 \
  --bootstrap-server kafka1:19092

# topic-1: READ
docker exec -it kafka1 kafka-acls \
  --add \
  --allow-principal User:CN=kafka-client \
  --operation READ \
  --operation DESCRIBE \
  --topic topic-1 \
  --bootstrap-server kafka1:19092


docker build -f Dockerfile.client -t kafka-client .

docker run --rm --network practicum_6_confluent kafka-client python producer.py

docker run --rm --network practicum_6_confluent kafka-client python consumer.py