version: "3.8"
services:
  # ===== Cluster A =====
  zookeeper-a:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka-a-1:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper-a]
    hostname: kafka-a-1
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-a:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-a-1:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # ACLs (по умолчанию — permissive; ужесточать после setup-acls.sh)
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_SUPER_USERS: "User:admin"
    extra_hosts:
      - "localhost:127.0.0.1"

  kafka-a-2:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper-a]
    hostname: kafka-a-2
    ports:
      - "19093:19093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-a:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-a-2:9093,EXTERNAL://localhost:19093
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:19093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_SUPER_USERS: "User:admin"
    extra_hosts:
      - "localhost:127.0.0.1"

  connect-a:
    image: confluentinc/cp-kafka-connect:7.6.1
    depends_on: [kafka-a-1, kafka-a-2]
    ports:
      - "18083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-a-1:9092,kafka-a-2:9093"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect-a"
      CONNECT_GROUP_ID: "connect-a"
      CONNECT_CONFIG_STORAGE_TOPIC: "_connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "_connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "_connect-status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
    volumes:
      - ./storage:/data

  # ===== Cluster B =====
  zookeeper-b:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "32181:2181"

  kafka-b-1:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper-b]
    hostname: kafka-b-1
    ports:
      - "19094:19094"
    environment:
      KAFKA_BROKER_ID: 11
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-b:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-b-1:9094,EXTERNAL://localhost:19094
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9094,EXTERNAL://0.0.0.0:19094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_SUPER_USERS: "User:admin"
    extra_hosts:
      - "localhost:127.0.0.1"

  kafka-b-2:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper-b]
    hostname: kafka-b-2
    ports:
      - "19095:19095"
    environment:
      KAFKA_BROKER_ID: 12
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-b:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-b-2:9095,EXTERNAL://localhost:19095
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9095,EXTERNAL://0.0.0.0:19095
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_SUPER_USERS: "User:admin"
    extra_hosts:
      - "localhost:127.0.0.1"

  connect-b:
    image: confluentinc/cp-kafka-connect:7.6.1
    depends_on: [kafka-b-1, kafka-b-2]
    ports:
      - "18084:8084"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-b-1:9094,kafka-b-2:9095"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect-b"
      CONNECT_GROUP_ID: "connect-b"
      CONNECT_CONFIG_STORAGE_TOPIC: "_connectB-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "_connectB-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "_connectB-status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_PLUGIN_PATH: "/usr/share/java"

  # ===== MirrorMaker 2 =====
  mm2:
    image: confluentinc/cp-kafka-connect:7.6.1
    depends_on: [kafka-a-1, kafka-a-2, kafka-b-1, kafka-b-2]
    command: ["bash", "-c", "connect-mirror-maker /mm2/mm2.properties"]
    volumes:
      - ./mm2:/mm2

  # ===== PostgreSQL =====
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: marketplace
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
