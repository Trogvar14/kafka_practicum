# === ???????? ===
clusters = clusterA, clusterB
clusterA.bootstrap.servers = kafka-a-1:9092,kafka-a-2:9092
clusterB.bootstrap.servers = kafka-b-1:9092,kafka-b-2:9092

# === TLS ??? ???????-??????? (??? internal topics ? clusterA) ===
bootstrap.servers = kafka-a-1:9092,kafka-a-2:9092
security.protocol=SSL
ssl.truststore.location=/etc/mm2/secrets/kafka.truststore.jks
ssl.truststore.password=changeit
ssl.truststore.type=JKS
ssl.endpoint.identification.algorithm=https

# === TLS ??? ??????????? ? ????? ????????? ===
clusterA.security.protocol=SSL
clusterA.ssl.truststore.location=/etc/mm2/secrets/kafka.truststore.jks
clusterA.ssl.truststore.password=changeit
clusterA.ssl.truststore.type=JKS
clusterA.ssl.endpoint.identification.algorithm=https

clusterB.security.protocol=SSL
clusterB.ssl.truststore.location=/etc/mm2/secrets/kafka.truststore.jks
clusterB.ssl.truststore.password=changeit
clusterB.ssl.truststore.type=JKS
clusterB.ssl.endpoint.identification.algorithm=https

# === ????? ?????????? A -> B ===
clusterA->clusterB.enabled = true
clusterA->clusterB.topics = ^(products_filtered|client_requests)$
clusterA->clusterB.emit.heartbeats.enabled = true
clusterA->clusterB.emit.checkpoints.enabled = true
clusterA->clusterB.tasks.max = 2
replication.policy.class = org.apache.kafka.connect.mirror.IdentityReplicationPolicy

# === ????????? ?????? MM2 / Connect ===
replication.factor = 2
checkpoints.topic.replication.factor = 2
heartbeats.topic.replication.factor = 2
offset.syncs.topic.replication.factor = 2

config.storage.topic = mm2-configs
offset.storage.topic  = mm2-offsets
status.storage.topic  = mm2-status
config.storage.replication.factor = 2
offset.storage.replication.factor = 2
status.storage.replication.factor = 2

# ??????????
key.converter=org.apache.kafka.connect.storage.StringConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
value.converter.schemas.enable=false
internal.key.converter=org.apache.kafka.connect.json.JsonConverter
internal.value.converter=org.apache.kafka.connect.json.JsonConverter
internal.key.converter.schemas.enable=false
internal.value.converter.schemas.enable=false
